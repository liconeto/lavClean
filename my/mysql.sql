-- MySQL Script generated by MySQL Workbench
-- Wed Jul 12 09:15:01 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema lavClean
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema lavClean
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `lavClean` DEFAULT CHARACTER SET utf8 ;
USE `lavClean` ;

-- -----------------------------------------------------
-- Table `lavClean`.`unidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lavClean`.`unidade` (
  `idunidade` INT NOT NULL,
  `nomeUnidade` VARCHAR(45) NOT NULL,
  `CNPJ` VARCHAR(14) NULL,
  PRIMARY KEY (`idunidade`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lavClean`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lavClean`.`cliente` (
  `idcliente` INT NOT NULL,
  `unidade_idunidade` INT NOT NULL,
  PRIMARY KEY (`idcliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lavClean`.`pessoa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lavClean`.`pessoa` (
  `idpessoa` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `sobreNome` VARCHAR(60) NULL,
  `cpf` VARCHAR(12) NULL,
  `cnpj` VARCHAR(14) NULL,
  `documento` VARCHAR(30) NULL,
  `tipoPessoa` VARCHAR(1) NOT NULL COMMENT 'Classificação de Pessoa como Fisica, Juridica ou Outra.',
  `unidade_idunidade` INT NOT NULL,
  `indCliente` VARCHAR(1) NULL,
  `indFuncionario` VARCHAR(1) NULL,
  `cliente_idcliente` INT NOT NULL,
  `matricula` VARCHAR(30) NULL,
  UNIQUE INDEX `idpessoa_UNIQUE` (`idpessoa` ASC) VISIBLE,
  PRIMARY KEY (`idpessoa`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lavClean`.`pessoaContato`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lavClean`.`pessoaContato` (
  `idpessoaContato` INT NOT NULL,
  `idPessoa` INT NOT NULL,
  `telefone` BIGINT(13) NULL,
  `email` VARCHAR(100) NULL,
  `facebook` VARCHAR(45) CHARACTER SET 'ascii' NULL,
  `site` VARCHAR(60) NULL,
  `instagram` VARCHAR(45) NULL,
  PRIMARY KEY (`idpessoaContato`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lavClean`.`uf`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lavClean`.`uf` (
  `iduf` INT NOT NULL,
  `idcidade` INT NULL,
  `uf` VARCHAR(3) NULL,
  `idpais` INT NULL,
  PRIMARY KEY (`iduf`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lavClean`.`pais`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lavClean`.`pais` (
  `idpais` INT NOT NULL,
  `nomepais` VARCHAR(45) NOT NULL,
  `siglapais` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`idpais`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lavClean`.`cidade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lavClean`.`cidade` (
  `idcidade` INT NOT NULL,
  `nomecidade` VARCHAR(45) NULL,
  `siglaCidade` VARCHAR(3) NULL,
  `iduf` INT NULL,
  `uf_iduf` INT NOT NULL,
  `pais_idpais` INT NOT NULL,
  PRIMARY KEY (`idcidade`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lavClean`.`endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lavClean`.`endereco` (
  `idendereco` INT NOT NULL,
  `ipPessoa` INT NOT NULL,
  `logradouro` VARCHAR(60) NULL,
  `numero` VARCHAR(20) NULL,
  `complemento` VARCHAR(100) NULL,
  `cidade_idcidade` INT NOT NULL,
  PRIMARY KEY (`idendereco`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lavClean`.`setor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lavClean`.`setor` (
  `idsetor` INT NOT NULL,
  `nome` VARCHAR(45) NULL,
  PRIMARY KEY (`idsetor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lavClean`.`funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lavClean`.`funcionario` (
  `idfuncionario` INT NOT NULL,
  `funcao` VARCHAR(45) NULL,
  `pessoa_idpessoa` INT NOT NULL,
  `setor_idsetor` INT NOT NULL,
  `tpfuncionario` VARCHAR(1) NOT NULL)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lavClean`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lavClean`.`pedido` (
  `idpedido` INT NOT NULL,
  `obs` VARCHAR(200) NULL,
  `idfuncionario` INT NULL,
  `idCliente` INT NULL,
  PRIMARY KEY (`idpedido`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lavClean`.`produtos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lavClean`.`produtos` (
  `idprodutos` INT NOT NULL,
  `idFuncionario` INT NULL,
  `codigo` VARCHAR(45) NOT NULL,
  `tpproduto` VARCHAR(2) NOT NULL,
  `nome` VARCHAR(40) NOT NULL,
  `descricao` VARCHAR(250) NULL,
  `tamanho` VARCHAR(3) NULL,
  `cor` VARCHAR(30) NULL,
  PRIMARY KEY (`idprodutos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lavClean`.`itensPedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `lavClean`.`itensPedido` (
  `iditensPedido` INT NOT NULL,
  `idpedido` INT NULL,
  `obsItem` VARCHAR(60) NULL,
  `produtos_idprodutos` INT NOT NULL,
  PRIMARY KEY (`iditensPedido`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
